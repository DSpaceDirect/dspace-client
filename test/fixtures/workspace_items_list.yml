---
http_interactions:
- request:
    method: post
    uri: https://demo.dspacedirect.org/server/api/authn/login
    body:
      encoding: US-ASCII
      string: "<AUTHENTICATION>"
    headers:
      User-Agent:
      - Faraday v1.10.0
      Content-Type:
      - application/x-www-form-urlencoded
      X-XSRF-Token: []
  response:
    status:
      code: 403
      message: '403'
    headers:
      date:
      - Tue, 26 Jul 2022 20:07:44 GMT
      content-type:
      - application/json;charset=UTF-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      server:
      - Apache/2.4.54 (Unix)
      vary:
      - Origin,Access-Control-Request-Method,Access-Control-Request-Headers
      set-cookie:
      - DSPACE-XSRF-COOKIE=68d47359-53b4-4849-89da-235d657d6dda; Path=/server; Secure;
        HttpOnly; SameSite=None
      dspace-xsrf-token:
      - 68d47359-53b4-4849-89da-235d657d6dda
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - 1; mode=block
      cache-control:
      - no-cache, no-store, max-age=0, must-revalidate
      pragma:
      - no-cache
      expires:
      - '0'
      strict-transport-security:
      - max-age=315360000, max-age=315360000
      x-frame-options:
      - SAMEORIGIN
      referrer-policy:
      - strict-origin-when-cross-origin
      permissions-policy:
      - interest-cohort=()
      content-security-policy:
      - 'default-src https: ''unsafe-inline'' ''unsafe-eval'''
      access-control-expose-headers:
      - Authorization, expires, Location, Content-Disposition, WWW-Authenticate, Set-Cookie,
        X-Requested-With, DSPACE-XSRF-TOKEN
    body:
      encoding: UTF-8
      string: '{"timestamp":"2022-07-26T20:07:44.288+00:00","status":403,"error":"Forbidden","message":"Access
        is denied. Invalid CSRF token.","path":"/server/api/authn/login"}'
  recorded_at: Tue, 26 Jul 2022 20:07:44 GMT
- request:
    method: post
    uri: https://demo.dspacedirect.org/server/api/authn/login
    body:
      encoding: US-ASCII
      string: "<AUTHENTICATION>"
    headers:
      User-Agent:
      - Faraday v1.10.0
      Content-Type:
      - application/x-www-form-urlencoded
      X-XSRF-Token:
      - 68d47359-53b4-4849-89da-235d657d6dda
      Cookie:
      - DSPACE-XSRF-COOKIE=68d47359-53b4-4849-89da-235d657d6dda
  response:
    status:
      code: 200
      message: '200'
    headers:
      date:
      - Tue, 26 Jul 2022 20:07:45 GMT
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      server:
      - Apache/2.4.54 (Unix)
      vary:
      - Origin,Access-Control-Request-Method,Access-Control-Request-Headers
      set-cookie:
      - DSPACE-XSRF-COOKIE=; Path=/server; Max-Age=0; Expires=Thu, 01 Jan 1970 00:00:00
        GMT; Secure; HttpOnly; SameSite=None, DSPACE-XSRF-COOKIE=e0f82f70-0840-4385-bcaa-24753e50ccd3;
        Path=/server; Secure; HttpOnly; SameSite=None
      dspace-xsrf-token:
      - e0f82f70-0840-4385-bcaa-24753e50ccd3
      authorization:
      - "<TOKEN>"
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - 1; mode=block
      cache-control:
      - no-cache, no-store, max-age=0, must-revalidate
      pragma:
      - no-cache
      expires:
      - '0'
      strict-transport-security:
      - max-age=315360000, max-age=315360000
      x-frame-options:
      - SAMEORIGIN
      referrer-policy:
      - strict-origin-when-cross-origin
      permissions-policy:
      - interest-cohort=()
      content-security-policy:
      - 'default-src https: ''unsafe-inline'' ''unsafe-eval'''
      access-control-expose-headers:
      - Authorization, expires, Location, Content-Disposition, WWW-Authenticate, Set-Cookie,
        X-Requested-With, DSPACE-XSRF-TOKEN
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Tue, 26 Jul 2022 20:07:45 GMT
- request:
    method: get
    uri: https://demo.dspacedirect.org/server/api/submission/workspaceitems
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-XSRF-Token:
      - e0f82f70-0840-4385-bcaa-24753e50ccd3
      Authorization:
      - "<TOKEN>"
      Cookie:
      - DSPACE-XSRF-COOKIE=e0f82f70-0840-4385-bcaa-24753e50ccd3
  response:
    status:
      code: 200
      message: '200'
    headers:
      date:
      - Tue, 26 Jul 2022 20:07:48 GMT
      content-type:
      - application/hal+json;charset=UTF-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      server:
      - Apache/2.4.54 (Unix)
      vary:
      - Origin,Access-Control-Request-Method,Access-Control-Request-Headers
      content-language:
      - en
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - 1; mode=block
      cache-control:
      - no-cache, no-store, max-age=0, must-revalidate
      pragma:
      - no-cache
      expires:
      - '0'
      strict-transport-security:
      - max-age=315360000, max-age=315360000
      x-frame-options:
      - SAMEORIGIN
      referrer-policy:
      - strict-origin-when-cross-origin
      permissions-policy:
      - interest-cohort=()
      content-security-policy:
      - 'default-src https: ''unsafe-inline'' ''unsafe-eval'''
      access-control-expose-headers:
      - Authorization, expires, Location, Content-Disposition, WWW-Authenticate, Set-Cookie,
        X-Requested-With, DSPACE-XSRF-TOKEN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 26 Jul 2022 20:08:31 GMT
recorded_with: VCR 6.1.0
